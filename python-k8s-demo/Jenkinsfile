pipeline {
    agent any

    environment {
    IMAGE_NAME = "asia-south1-docker.pkg.dev/rama17-05-2020/python-k8s-demo/python-k8s-demo"
    FULL_IMAGE = "${IMAGE_NAME}:${BUILD_NUMBER}"
}


    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ichbinuus/jenkins-repo.git'
            }
        }

       stage('Build Docker Image') {
    steps {
        sh "docker build -t ${FULL_IMAGE} python-k8s-demo/"
    }
}
       stage('Deploy to GKE') {
    steps {
        withCredentials([file(credentialsId: '5769dcb1-ff48-4f73-a6f7-6ed8b47009dd', variable: 'GCP_KEY')]) {
            sh '''
                echo "üîê Authenticating with GCP..."
                gcloud auth activate-service-account --key-file=$GCP_KEY
                gcloud config set project rama17-05-2020
                gcloud config set compute/region asia-south1
                gcloud container clusters get-credentials cluster-1 --region asia-south1

                echo "üîß Updating image in deployment file..."
                sed -i "s|IMAGE_PLACEHOLDER|${FULL_IMAGE}|" python-k8s-demo/k8s/deployment.yaml

                echo "üöÄ Applying Kubernetes manifests..."
                kubectl apply -f python-k8s-demo/k8s/deployment.yaml
                kubectl apply -f python-k8s-demo/k8s/service.yaml

                echo "‚úÖ Deployment triggered!"
            '''
        }
    }
}



        stage('Push to GCR') {
            steps {
                withCredentials([file(credentialsId: '5769dcb1-ff48-4f73-a6f7-6ed8b47009dd', variable: 'GCP_KEY')]) {
                    sh '''
                        gcloud auth activate-service-account --key-file=$GCP_KEY
                          gcloud auth configure-docker asia-south1-docker.pkg.dev -q
                        docker push ${IMAGE_NAME}:${BUILD_NUMBER}
                    '''
                }
            }
        }
    }
}
